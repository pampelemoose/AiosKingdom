@model DataModels.GameServer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DatabaseName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DatabaseName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DatabaseName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Host, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Host, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Host, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Port, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Port, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Difficulty, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SlotLimit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SlotLimit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SlotLimit, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.BaseExperience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BaseExperience, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BaseExperience, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ExperiencePerLevelRatio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExperiencePerLevelRatio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExperiencePerLevelRatio, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.SpiritsPerLevelUp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SpiritsPerLevelUp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SpiritsPerLevelUp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmbersPerLevelUp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmbersPerLevelUp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmbersPerLevelUp, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.BaseHealth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BaseHealth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BaseHealth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HealthPerLevelRatio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HealthPerLevelRatio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HealthPerLevelRatio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HealthPerStaminaRatio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HealthPerStaminaRatio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HealthPerStaminaRatio, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.BaseMana, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BaseMana, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BaseMana, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManaPerLevelRatio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ManaPerLevelRatio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ManaPerLevelRatio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManaPerEnergyRatio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ManaPerEnergyRatio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ManaPerEnergyRatio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong> @ViewBag.Message
        </div>
    }
}
