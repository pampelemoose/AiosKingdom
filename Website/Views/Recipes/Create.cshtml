@model Website.Models.RecipeModel

@{
    ViewBag.Title = "Create";
}

<section>
    <div class="container">
        <h2>Create</h2>
    </div>
</section>

@using (Html.BeginForm())
{
    <section class="p-2">
        <div class="container">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-12">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.SelectedVersion, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.SelectedVersion, new SelectList(DataRepositories.VersionRepository.GetAll(), "Id", null), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.SelectedVersion, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.JobType, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EnumDropDownListFor(model => model.JobType, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.JobType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </section>
    <section class="bg-dark text-muted p-3">
        <div class="container">
            <div class="row mt-1">
                <div class="col-md-6">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.Technique, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EnumDropDownListFor(model => model.Technique, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Technique, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.IsShop, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.IsShop, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.IsShop, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </section>
    <section class="p-3">
        <div class="container">
            <div class="row mt-1">
                <div class="col-md-12">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.CommonCraftedItemId, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.CommonCraftedItemId, 
                       new SelectList(DataRepositories.ItemRepository.GetAllNullableForQuality(DataModels.Items.ItemQuality.Common), "Vid", "Name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.CommonCraftedItemId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.UncommonCraftedItemId, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.UncommonCraftedItemId, 
                       new SelectList(DataRepositories.ItemRepository.GetAllNullableForQuality(DataModels.Items.ItemQuality.Uncommon), "Vid", "Name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.UncommonCraftedItemId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.RareCraftedItemId, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.RareCraftedItemId, 
                       new SelectList(DataRepositories.ItemRepository.GetAllNullableForQuality(DataModels.Items.ItemQuality.Rare), "Vid", "Name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.RareCraftedItemId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.EpicCraftedItemId, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.EpicCraftedItemId, 
                       new SelectList(DataRepositories.ItemRepository.GetAllNullableForQuality(DataModels.Items.ItemQuality.Epic), "Vid", "Name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EpicCraftedItemId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-12 mt-1">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.LegendaryCraftedItemId, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.LegendaryCraftedItemId, 
                       new SelectList(DataRepositories.ItemRepository.GetAllNullableForQuality(DataModels.Items.ItemQuality.Legendary), "Vid", "Name"), new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(model => model.LegendaryCraftedItemId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </section>
    <section class="bg-dark text-muted p-3">
        <div class="container">
            <div class="row">
                <div class="col-md-10">
                    <h2>@Html.LabelFor(model => model.Combinaisons, htmlAttributes: new { @class = "control-label" })</h2>
                </div>
                <div class="col-md-2">
                    <input class="btn btn-block" type="button" onclick="addCombinaisonToRecipe()" value="<Add Combinaison>" />
                </div>
            </div>

            <div class="row mt-2" id="combList">
                @if (Model != null && Model.Combinaisons != null)
                {
                    for (var i = 0; i < Model.Combinaisons.Count; i++)
                    {

                        Html.RenderPartial("CombinaisonPartial", Model.Combinaisons[i]);
                    }
                }
            </div>
        </div>
    </section>

    <section class="mt-2">
        <div class="container">
            <input type="submit" value="<Create>" class="btn btn-block" />
        </div>
    </section>
}

@section Scripts {
    <script>
        function addCombinaisonToRecipe() {
            $.ajax({
                url: "/Recipes/AddCombinaisonPartial",
                cache: false,
                type: "GET",
                success: function (data) {
                    $('#combList').append(data);
                    $('#combList').fadeIn('fast');
                }
            });
        }
    </script>
}