@model Website.Models.LootModel

<tr class="row">
    @using (Html.BeginCollectionItem("Loots"))
    {
        <td class="col-md-2">
            <div class="form-group">
                @Html.EditorFor(model => model.DropRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DropRate, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control item-list-changer" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.DropDownListFor(model => model.SelectedItem, new SelectList(Model.Items, "ItemId", "ItemName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Items, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-2">
            <div class="form-group">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-2">
            <button type="button" class="close" aria-label="Close" onclick="$(this).parent().parent().remove();">
                <span aria-hidden="true">&times;</span>
            </button>
        </td>
    }
</tr>