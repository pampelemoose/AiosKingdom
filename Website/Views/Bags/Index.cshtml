@model Website.Models.Filters.BagFilter

@{
    ViewBag.Title = "Bags";
}

@using (Html.BeginForm())
{
    <section>
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h2>Bags</h2>
                </div>
                <div class="col-md-6">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        <div class="input-group-append">
                            <input type="submit" value="Search" class="btn btn-primary btn-block" />
                            <button class="btn btn-primary dropdown-toggle dropdown-toggle-split" type="button" data-toggle="collapse" data-target="#filter-body" aria-expanded="false" aria-controls="filter-body">
                                <span class="sr-only">Toggle Dropdown</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="bg-info collapse p-2" id="filter-body">
        <div class="container">
            <div class="row mt-2">
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.SelectedVersion, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.DropDownListFor(model => model.SelectedVersion, new SelectList(DataRepositories.VersionRepository.GetAll(), "Id", null), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.Quality, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EnumDropDownListFor(model => model.Quality, new { @class = "form-control" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.SlotCount, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.SlotCount, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.ItemLevel, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.ItemLevel, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="input-group input-group-sm">
                        <div class="input-group-prepend">
                            @Html.LabelFor(model => model.UseLevelRequired, htmlAttributes: new { @class = "input-group-text" })
                        </div>
                        @Html.EditorFor(model => model.UseLevelRequired, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="offset-md-10 col-md-2">
                    <input type="submit" value="Filter" class="btn btn-default btn-block" />
                </div>
            </div>
        </div>
    </section>
}

<section>
    <div class="container">
        <div class="row">
            @foreach (var bag in Model.Items)
            {
                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
                    <div class="card text-center mt-3 @bag.Quality.ToString().ToLower()">
                        <img class="card-img-top" src="@bag.Image">
                        <div class="card-header">
                            @bag.Name
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item ">
                                <div class="row">
                                    <div class="col-12 @bag.Quality.ToString().ToLower()-text">
                                        <strong>@bag.Quality</strong>
                                    </div>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-8">Level Required</div>
                                    <div class="col-4">@bag.UseLevelRequired</div>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-8">Item Level</div>
                                    <div class="col-4">@bag.ItemLevel</div>
                                </div>
                            </li>
                        </ul>
                        <div class="card-body font-weight-light font-italic">
                            @bag.Description
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <div class="row">
                                    <div class="col-8">SlotCount</div>
                                    <div class="col-4"><strong>+ @bag.SlotCount</strong></div>
                                </div>
                            </li>
                            @if (bag.Stats != null)
                            {
                                foreach (var stat in bag.Stats)
                                {
                                    <li class="list-group-item">
                                        <div class="row">
                                            <div class="col-8">@stat.Type</div>
                                            <div class="col-4"><strong>+ @stat.StatValue</strong></div>
                                        </div>
                                    </li>
                                }
                            }
                        </ul>
                        @if (User.IsInRole("SuperAdmin"))
                        {
                            <div class="card-footer">
                                @Html.ActionLink("Edit", "Edit", new { id = bag.ItemId }, new { @class = "btn btn-block btn-primary" })
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</section>