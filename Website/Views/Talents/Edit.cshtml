@model Website.Models.BookModel

@{
    ViewBag.Title = "Edit";
}

<section>
    <div class="container">
        <h2>Edit</h2>
    </div>
</section>

@using (Html.BeginForm())
{
    <section class="p-3">
        <div class="container">
            <div class="row">
                @Html.HiddenFor(m => Model.Id)

                <div class="col-md-10">
                    <h2>@Html.LabelFor(model => model.Talents, htmlAttributes: new { @class = "control-label" })</h2>
                </div>
                <div class="col-md-2">
                    <input class="btn btn-block" type="button" onclick="addTalentToBook('@Model.Id')" value="<Add Talent>" />
                </div>
            </div>

            <div class="row mt-2" id="talentList">
                @if (Model != null && Model.Talents != null)
                {
                    for (var i = 0; i < Model.Talents.Count; i++)
                    {
                        var talentId = Guid.NewGuid();

                        <div id="talent-card-@talentId" class="col-md-6 mt-2">
                            @Html.HiddenFor(model => Model.Talents[i].Id)

                            <div class="card card-dark">
                                <div class="card-body">
                                    <div class="row mt-1">
                                        <div class="col-md-12">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].Branch, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.EditorFor(model => model.Talents[i].Branch, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].Branch, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 mt-1">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].Leaf, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.EditorFor(model => model.Talents[i].Leaf, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].Leaf, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].TargetInscription, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.DropDownListFor(model => model.Talents[i].TargetInscription, new SelectList(Model.Talents[i].Inscriptions, "Id", "Type"), new { @class = "form-control" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].TargetInscription, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 mt-1">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].TalentPointsRequired, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.EditorFor(model => model.Talents[i].TalentPointsRequired, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].TalentPointsRequired, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 mt-1">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].Type, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.EnumDropDownListFor(model => model.Talents[i].Type, new { @class = "form-control item-list-changer" })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].Type, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12 mt-1">
                                            <div class="input-group input-group-sm">
                                                <div class="input-group-prepend">
                                                    @Html.LabelFor(model => model.Talents[i].Value, htmlAttributes: new { @class = "input-group-text" })
                                                </div>
                                                @Html.EditorFor(model => model.Talents[i].Value, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Talents[i].Value, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <h5>@Html.LabelFor(model => model.Talents[i].Unlocks, htmlAttributes: new { @class = "control-label" })</h5>
                                            </div>
                                            <div class="col-md-4">
                                                <input class="btn btn-block" type="button" onclick="addUnlockTypeToTalent('@i', this)" value="<Add Type>" id="@talentId" />
                                            </div>
                                        </div>
                                    </li>
                                    <li class="list-group-item">
                                        <div class="row" id="unlockTypeList_@talentId">
                                            @if (Model != null && Model.Talents[i].Unlocks != null)
                                            {
                                                for (var j = 0; j < Model.Talents[i].Unlocks.Count; j++)
                                                {
                                                    Model.Talents[i].Unlocks[j].TalentId = i.ToString();
                                                    Html.RenderPartial("UnlockTypePartial", Model.Talents[i].Unlocks[j]);
                                                }
                                            }
                                        </div>
                                    </li>
                                </ul>
                                <div class="card-footer">
                                    <button type="button" class="close" aria-label="Close" onclick="$(this).parent().parent().parent().remove();">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </section>

    <section class="mt-2">
        <div class="container">
            <input type="submit" value="<Edit>" class="btn btn-block" />
        </div>
    </section>
}


@section Scripts {
    <script>
        function addTalentToBook(bookId) {
            $.ajax({
                url: "/Talents/AddTalentPartial",
                cache: false,
                type: "GET",
                data: {
                    "bookId": bookId
                },
                success: function (data) {
                    $('#talentList').append(data);
                    $('#talentList').fadeIn('fast');
                }
            });
        }

        function addUnlockTypeToTalent(talentId, talent) {
            var elem = document.getElementById('talent-card-' + talent.id);
            $.ajax({
                url: "/Talents/AddTalentUnlockPartial",
                cache: false,
                type: "GET",
                data: {
                    "talentId": talentId
                },
                success: function (data) {
                    $('#unlockTypeList_' + talent.id).append(data);
                    $('#unlockTypeList_' + talent.id).fadeIn('fast');
                }
            });
        }
    </script>
}