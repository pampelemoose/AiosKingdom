@model Website.Models.PageModel

@{ 
    var pageId = Guid.NewGuid();
}

<tr class="row">
    @using (Html.BeginCollectionItem("Pages"))
    {
        <td class="col-md-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div class="form-group">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-12">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control image-url-setter" } })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                    <input type="button" value="Update" class="col-md-2 btn btn-info update-image-viewer" />
                </div>
                <div class="col-md-2">
                    <img class="img-fluid img-thumbnail image-viewer" src="@Model.Image" />
                </div>
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EditorFor(model => model.StatCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatCost, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EditorFor(model => model.ManaCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManaCost, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EditorFor(model => model.Cooldown, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cooldown, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-12">

            @Html.LabelFor(model => model.Inscriptions, htmlAttributes: new { @class = "control-label" })
            <table class="table table-striped">
                <thead>
                    <tr class="row">
                        <th hidden></th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().Type, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().BaseValue, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().StatType, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().Ratio, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().Duration, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().IncludeWeaponDamages, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().WeaponTypes, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().WeaponDamagesRatio, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().PreferredWeaponTypes, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Inscriptions.FirstOrDefault().PreferredWeaponDamagesRatio, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">
                            <input class="btn btn-primary btn-block" type="button" onclick="addInscToPage(this)" value="Add Insc" id="@pageId" />
                        </th>
                    </tr>
                </thead>
                <tbody id="inscList_@pageId">
                    @if (Model != null && Model.Inscriptions != null)
                    {
                        for (var i = 0; i < Model.Inscriptions.Count; i++)
                        {
                            Html.RenderPartial("InscPartial", Model.Inscriptions[i]);
                        }
                    }
                </tbody>
            </table>

        </td>
        <td class="col-md-2">
            <button type="button" class="close" aria-label="Close" onclick="$(this).parent().parent().remove();">
                <span aria-hidden="true">&times;</span>
            </button>
        </td>
    }
</tr>
