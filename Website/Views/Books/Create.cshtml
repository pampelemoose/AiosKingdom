@model Website.Models.BookModel

@{
    ViewBag.Title = "Create";
}

<section>
    <div class="container">
        <h2>Create</h2>
    </div>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <section>
            <div class="container">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.VersionList, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SelectedVersion, new SelectList(Model.VersionList, "Id", null), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VersionList, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Quality, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Quality, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Quality, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </section>
        <section class="bg-info">
            <div class="container">
                @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label" })
                <table class="table table-striped">
                    <thead>
                        <tr class="row">
                            <th hidden></th>
                            <th hidden></th>
                            <th scope="col" class="col-md-3">@Html.LabelFor(model => model.Pages.FirstOrDefault().StatCost, htmlAttributes: new { @class = "control-label" })</th>
                            <th scope="col" class="col-md-3">@Html.LabelFor(model => model.Pages.FirstOrDefault().Rank, htmlAttributes: new { @class = "control-label" })</th>
                            <th scope="col" class="col-md-3">@Html.LabelFor(model => model.Pages.FirstOrDefault().ManaCost, htmlAttributes: new { @class = "control-label" })</th>
                            <th scope="col" class="col-md-2">
                                <input class="btn btn-primary btn-block" type="button" id="addPageToBook" value="Add Type" />
                            </th>
                        </tr>
                    </thead>
                    <tbody id="pageList">
                        @if (Model != null && Model.Pages != null)
                        {
                            for (var i = 0; i < Model.Pages.Count; i++)
                            {
                                Html.RenderPartial("PagePartial", Model.Pages[i]);
                            }
                        }
                    </tbody>
                </table>
            </div>
        </section>

        <section>
            <div class="container">
                <input type="submit" value="Create" class="btn btn-success btn-block" />
            </div>
        </section>
    </div>

    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong> @ViewBag.Message
        </div>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#addPageToBook").click(function () {
                $.ajax({
                    url: "/Books/AddPagePartial",
                    cache: false,
                    type: "GET",
                    success: function (data) {
                        $('#pageList').append(data);
                        $('#pageList').fadeIn('fast');
                    }
                });
            });

            $("#addInscToPage").click(function () {

            });
        });

        function addInscToPage(page) {
            $.ajax({
                url: "/Books/AddInscPartial",
                cache: false,
                type: "GET",
                success: function (data) {
                    $('#inscList_' + page.id).append(data);
                    $('#inscList_' + page.id).fadeIn('fast');
                }
            });
        }
    </script>
}