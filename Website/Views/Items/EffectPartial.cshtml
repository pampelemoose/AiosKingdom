@model DataModels.Items.ItemEffect

<div class="col-md-6 mb-2">
    @using (Html.BeginCollectionItem("Effects"))
    {
        <div class="card card-dark">
            @Html.HiddenFor(model => model.Id)
            <div class="card-header">
                <button type="button" class="close" aria-label="Close" onclick="$(this).parent().parent().parent().remove();">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "input-group-text" })
                            </div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-12 mt-1">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "input-group-text" })
                            </div>
                            @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-12 mt-1">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "input-group-text" })
                            </div>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-12 mt-1">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                @Html.LabelFor(model => model.AffectTime, htmlAttributes: new { @class = "input-group-text" })
                            </div>
                            @Html.EditorFor(model => model.AffectTime, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.AffectTime, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-12 mt-1">
                        <div class="input-group input-group-sm">
                            <div class="input-group-prepend">
                                @Html.LabelFor(model => model.AffectValue, htmlAttributes: new { @class = "input-group-text" })
                            </div>
                            @Html.EditorFor(model => model.AffectValue, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.AffectValue, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>