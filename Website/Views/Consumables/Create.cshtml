@model Website.Models.ConsumableModel

@{
    ViewBag.Title = "Create";
}

<section>
    <div class="container">
        <h2>Create</h2>
    </div>
</section>

@using (Html.BeginForm())
{
    <section>
        <div class="container">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.VersionList, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SelectedVersion, new SelectList(Model.VersionList, "Id", null), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VersionList, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row p-3">
                    <div class="col-md-10">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control image-url-setter" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <input type="button" value="Update" class="col-md-2 btn btn-info update-image-viewer" />
                    </div>
                    <div class="col-md-2">
                        <img class="img-fluid img-thumbnail image-viewer" src="@Model.Image" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quality, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Quality, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Quality, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemLevel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UseLevelRequired, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UseLevelRequired, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UseLevelRequired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
    </section>
    <section class="bg-info">
        <div class="container">
            @Html.LabelFor(model => model.Effects, htmlAttributes: new { @class = "control-label" })
            <table class="table table-striped">
                <thead>
                    <tr class="row">
                        <th scope="col" class="col-md-2">@Html.LabelFor(model => model.Effects.FirstOrDefault().Type, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-3">@Html.LabelFor(model => model.Effects.FirstOrDefault().Name, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-3">@Html.LabelFor(model => model.Effects.FirstOrDefault().Description, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-1">@Html.LabelFor(model => model.Effects.FirstOrDefault().AffectTime, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-1">@Html.LabelFor(model => model.Effects.FirstOrDefault().AffectValue, htmlAttributes: new { @class = "control-label" })</th>
                        <th scope="col" class="col-md-2">
                            <input class="btn btn-primary btn-block" type="button" id="addEffectToCons" value="Add Effect" />
                        </th>
                    </tr>
                </thead>
                <tbody id="effectList">
                    @if (Model != null && Model.Effects != null)
                    {
                        for (var i = 0; i < Model.Effects.Count; i++)
                        {
                            Html.RenderPartial("EffectPartial", Model.Effects[i]);
                        }
                    }
                </tbody>
            </table>
        </div>
    </section>
    <section class="mt-3">
        <div class="container">
            <input type="submit" value="Create" class="btn btn-success btn-block" />
        </div>
    </section>

    if (ViewBag.Message != null)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong> @ViewBag.Message
        </div>
    }

}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#addEffectToCons").click(function () {
                $.ajax({
                    url: "/Consumables/AddEffectPartial",
                    cache: false,
                    type: "GET",
                    success: function (data) {
                        $('#effectList').append(data);
                        $('#effectList').fadeIn('fast');
                    }
                });
            });

            $("#addInscToPage").click(function () {

            });
        });
    </script>
}
