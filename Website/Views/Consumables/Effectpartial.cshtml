@model DataModels.Items.ConsumableEffect

<tr class="row">
    @using (Html.BeginCollectionItem("Effects"))
    {
        <td class="col-md-2">
            <div class="form-group">
                @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control item-list-changer" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-3">
            <div class="form-group">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-4">
            <div class="form-group">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-1">
            <div class="form-group">
                @Html.EditorFor(model => model.AffectTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AffectTime, "", new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-md-1">
            <div class="form-group">
                @Html.EditorFor(model => model.AffectValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AffectValue, "", new { @class = "text-danger" })
            </div>
        </td>

        <td class="col-md-1">
            <button type="button" class="close" aria-label="Close" onclick="$(this).parent().parent().remove();">
                <span aria-hidden="true">&times;</span>
            </button>
        </td>
    }
</tr>